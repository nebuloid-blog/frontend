// Use SASS color extensions
@use 'sass:color';

/* SASS Functions */
// The decompose function helps manipulate colors more easily.
// It extrapolates a color's "shade", which is a tuple of colors.
// This "shade" can't be used without an rgb() or rgba() function.
//
// Once Dynamic Color Manipulation with CSS Relative Colors
//  is in spec for CSS in most browsers, we can remove this.
@function decompose($color) {
	$r: color.red($color);
	$g: color.green($color);
	$b: color.blue($color);
	$shade: ($r,$g,$b);
	@return $shade;
}

/* Color Settings & Variable Declarations */
:root {
	// Base CSS Variables
	--foreground-alpha: 75%;
	--background-alpha: calc(100% * 1/3);
	--border-alpha: 75%;

	/* DECLARATIVE COLORS */
	// Basic Colors
	--blue-shade:    #{decompose(#0d6efd)};
	--indigo-shade:  #{decompose(#6610f2)};
	--purple-shade:  #{decompose(#6f42c1)};
	--pink-shade:    #{decompose(#d63384)};
	--red-shade:     #{decompose(#dc3545)};
	--orange-shade:  #{decompose(#fd7e14)};
	--yellow-shade:  #{decompose(#ffc107)};
	--green-shade:   #{decompose(#198754)};
	--teal-shade:    #{decompose(#20c997)};
	--cyan-shade:    #{decompose(#0dcaf0)};

	--blue-color: rgb(var(--blue-shade));
	--indigo-color: rgb(var(--indigo-shade));
	--purple-color: rgb(var(--purple-shade));
	--pink-color: rgb(var(--pink-shade));
	--red-color: rgb(var(--red-shade));
	--orange-color: rgb(var(--orange-shade));
	--yellow-color: rgb(var(--yellow-shade));
	--green-color: rgb(var(--green-shade));
	--teal-color: rgb(var(--teal-shade));
	--cyan-color: rgb(var(--cyan-shade));

	// Neutral Colors
	--black-shade:   #{decompose(#000)};
	--dark-shade:    #{decompose(#333)};
	--gray-shade:    #{decompose(#888)};
	--light-shade:   #{decompose(#CCC)};
	--white-shade:   #{decompose(#FFF)};

	--black-color: rgb(var(--black-shade));
	--dark-color: rgb(var(--dark-shade));
	--gray-color: rgb(var(--gray-shade));
	--light-color: rgb(var(--light-shade));
	--white-color: rgb(var(--white-shade));

	/* SEMANTIC COLORS */
	// Status States
	--error-shade: var(--red-shade);
	--warning-shade: var(--yellow-shade);
	--success-shade: var(--green-shade);
	--information-shade: var(--blue-shade);
	--secret-shade: var(--purple-shade);

	--error-color: rgb(var(--error-color));
	--warning-color: rgb(var(--warning-color));
	--success-color: rgb(var(--success-color));
	--information-color: rgb(var(--information-color));
	--secret-color: rgb(var(--secret-color));

	// Brand Colors & Tiered States
	--primary-shade: var(--blue-shade);
	--primary-color: rgb(var(--primary-shade));

	/* FUNCTIONAL COLORS */
	// Link States
	--link-shade: var(--blue-shade);
	--link-hover-shade: var(--indigo-shade);
	--link-visited-shade: var(--purple-shade);
	--link-active-shade: var(--yellow-shade);
	--link-focus-shade: var(--red-shade);

	--link-color: rgb(var(--link-shade));
	--link-hover-color: rgb(var(--link-hover-shade));
	--link-visited-color: rgb(var(--link-visited-shade));
	--link-active-color: rgb(var(--link-active-shade));
	--link-focus-color: rgb(var(--link-focus-shade));
}

// Color Schemes
@mixin light-mode {
	/* DECLARATIVE COLORS */
	// Contrast Colors
	--subtle-shade: var(--light-shade);
	--neutral-shade: var(--gray-shade);
	--vivid-shade: var(--dark-shade);

	--subtle-color: rgb(var(--subtle-shade));
	--neutral-color: rgb(var(--neutral-shade));
	--vivid-color: rgb(var(--vivid-shade));

	/* FUNCTIONAL COLORS */
	// Neutral Areas
	--foreground-shade: var(--black-shade);
	--background-shade: var(--white-shade);
	--border-shade: var(--light-shade);

	--foreground-color: rgb(var(--foreground-shade));
	--background-color: rgb(var(--background-shade));
	--border-color: rgb(var(--border-shade));

	--foreground-clear: rgba(var(--foreground-shade), var(--foreground-alpha));
	--background-clear: rgba(var(--background-shade), var(--background-alpha));
	--border-clear: rgba(var(--border-shade), var(--border-alpha));

	/* PROPERTY DECLARATIONS */
	color: var(--foreground-color);
	&#page-wrapper {
		background-color: var(--background-color);
	}

	.invert-in-light-mode {
		filter: invert(1)
	}
}

@mixin dark-mode {
	/* DECLARATIVE COLORS */
	// Contrast Colors
	--subtle-shade: var(--dark-shade);
	--neutral-shade: var(--gray-shade);
	--vivid-shade: var(--light-shade);

	--subtle-color: rgb(var(--subtle-shade));
	--neutral-color: rgb(var(--neutral-shade));
	--vivid-color: rgb(var(--vivid-shade));

	/* FUNCTIONAL COLORS */
	// Neutral Areas
	--foreground-shade: var(--white-shade);
	--background-shade: var(--black-shade);
	--border-shade: var(--dark-shade);

	--foreground-color: rgb(var(--foreground-shade));
	--background-color: rgb(var(--background-shade));
	--border-color: rgb(var(--border-shade));

	--foreground-clear: rgba(var(--foreground-shade), var(--foreground-alpha));
	--background-clear: rgba(var(--background-shade), var(--background-alpha));
	--border-clear: rgba(var(--border-shade), var(--border-alpha));

	/* PROPERTY DECLARATIONS */
	color: var(--foreground-color);
	&#page-wrapper {
		background-color: var(--background-color);
	}

	.invert-in-dark-mode {
		filter: invert(1)
	}
}

[data-color-scheme='light'] {
	@include light-mode;
}

[data-color-scheme='dark'] {
	@include dark-mode;
}

[data-color-scheme='system'] {
	@media (prefers-color-scheme: light) {
		@include light-mode;
	}

	@media (prefers-color-scheme: dark) {
		@include dark-mode;
	}
}
